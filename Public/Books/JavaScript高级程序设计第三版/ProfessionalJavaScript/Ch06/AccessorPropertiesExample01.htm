<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"> 
    <title>Accessor Properties Example</title>
    <script type="text/javascript">
// 创建一个book对象，定义两个默认属性：_year和edition
        var book = {
        	//_year前面的下划线是一种常用的记号，用于表示只能通过对象方法访问的属性
            _year: 2004,    
            edition: 1
        };
          
 // 访问器属性year包含一个getter函数和一个setter函数
        Object.defineProperty(book, "year", {
 // getter函数返回_year的值
            get: function(){
                return this._year;
            },
 // setter函数通过计算来确定正确的版本
            set: function(newValue){
            
                if (newValue > 2004) {
                    this._year = newValue;
                    this.edition += newValue - 2004;
                
                }
            }
        });
 // 把year属性修改为2005会导致_year变成2005，而edition变为2
        book.year = 2005;
        alert(book.edition);   //2

    </script>
</head>
<body>
    <p>Note: this example only works in browsers that have implemented the ECMAScript 5 <code>Object.defineProperty()</code> method (IE9 and Firefox 4).</p>
    <p>这是使用访问器属性的常见方式，即设置一个属性的值会导致其他属性变化，请看源代码</p>
</body>
</html>