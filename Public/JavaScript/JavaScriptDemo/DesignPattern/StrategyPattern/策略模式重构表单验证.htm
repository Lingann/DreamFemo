<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>策略模式重构表单验证</title>
</head>
<body>
<form action="http:// xxx.com/register" id="registerForm" method="post">
用户名： <input type="text" name="userName"/>
密码： <input type="text" name="password"/>
电话： <input type="text" name="phoneNumber"/>	
<button>提交</button>
</form>
<script type="text/javascript">
	
	/*---------------------- 策略组 ------------------------*/
	 
	var strategies = {
		isNonEmpty: function( value,errorMsg ){
			if ( value === '' ){
				return errorMsg;
			}
		},
		minLength: function( value, length,errorMsg){
			if( value.length < length){
				return errorMsg;
			}
		},
		isMobile: function( value,errorMsg ){
			if(!/(^1[3|5|8][0-9]{9}$)/.test(value)){
				return errorMsg;
			}
		}
	};


	 /*---------------------- Context类 ------------------------*/
	var Validator = function(){
		this.cache = [];	// 保存校验规则
	};

	Validator.prototype.add = function(dom,rule,errorMsg){
		var ary = rule.split(':');	// 把strategy和参数分开
		this.cache.push(function(){		//把校验的步骤用空函数包装起来，并且放入cache
			var strategy = ary.shift();		// 用户调戏的strategy
			ary.unshift(dom.value);		// 把input的value添加进参数列表
			ary.push(errorMsg);		// 把errorMsg添加进参数列表
			return strategies[strategy].apply(dom,ary);	
		});
	};
	Validator.prototype.start = function(){
		for(var i = 0,validatorFunc;validatorFunc= this.cache[i++];){
			var msg = validatorFunc();	// 开始校验，并取得校验后的返回信息
			if (msg) {		// 如果有确切的返回值，说明校验没有通过
				return msg;
			}
		}
	};

	 /*---------------------- 初始化 ------------------------*/

	var validataFunc = function(){
		var validator = new Validator;
		/**********添加校验规则*************/
		validator.add(registerForm.userName,'isNonEmpty','用户名不能为空');
		validator.add(registerForm.password,'minLength:6','密码长度不能少于6位');
		validator.add(registerForm.phoneNumber,'isMobile','手机格式不正确');

		var errorMsg = validator.start();	//获得校验结果
		return errorMsg;
	}

 	/*---------------------- 事件类 ------------------------*/
	var registerForm = document.getElementById('registerForm');
	registerForm.onsubmit = function(){
		// 如果errorMsg有确切的返回值，说明未通过校验,将阻止表单提交
		var errorMsg = validataFunc();
		if(errorMsg){
			alert(errorMsg);
			return false;	
		}
	};

	
</script>
</body>
</html>